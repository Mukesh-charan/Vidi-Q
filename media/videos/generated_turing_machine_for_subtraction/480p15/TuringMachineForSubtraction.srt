1
00:00:00,000 --> 00:00:03,677
Ever wondered if a simple theoretical machine can

2
00:00:03,777 --> 00:00:07,610
perform complex arithmetic? Today, we explore how a

3
00:00:07,710 --> 00:00:12,236
Turing machine tackles subtraction, a fundamental operation.

4
00:00:13,400 --> 00:00:17,733
A Turing machine works on an infinite tape with symbols,

5
00:00:17,833 --> 00:00:21,770
using a head that reads, writes, and moves based on

6
00:00:21,870 --> 00:00:27,233
its internal state. For subtraction, we'll represent numbers in unary

7
00:00:27,333 --> 00:00:30,796
format, like three ones for the number three.

8
00:00:32,000 --> 00:00:38,583
To subtract 'N' from 'M', we initially set up the tape with 'M'

9
00:00:38,683 --> 00:00:47,388
ones, a separator, then 'N' ones. The machine then systematically 'crosses out' one

10
00:00:47,488 --> 00:00:53,860
'1' from the minuend 'M' for every '1' in the subtrahend 'N'.

11
00:00:56,000 --> 00:01:01,430
Let's visualize 5 minus 3. We have five ones, a separator, and

12
00:01:01,530 --> 00:01:07,317
three ones. The machine would repeatedly mark a '1' from the first

13
00:01:07,417 --> 00:01:12,669
group and a '1' from the second group until the second group

14
00:01:12,769 --> 00:01:17,308
is depleted. The remaining ones are our answer: two.

15
00:01:18,600 --> 00:01:22,575
This shows how even complex tasks like subtraction can

16
00:01:22,675 --> 00:01:27,782
be reduced to basic symbolic manipulations, demonstrating the immense

17
00:01:27,882 --> 00:01:31,028
power and universality of a Turing machine.

